useEffect(() => {
  if (!selectedUser?.uid || !currentChatId) return;

  // Listen for online status
  const statusRef = ref(db, `onlineUsers/${selectedUser.uid}`);
  const unsubscribeStatus = onValue(statusRef, (snapshot) => {
    const isOnline = snapshot.val();
    setStatus(isOnline ? 'Online' : 'Offline');
  });

  // Listen for typing status
  const typingRef = ref(db, `typingStatus/${currentChatId}/${selectedUser.uid}`);
  const unsubscribeTyping = onValue(typingRef, (snapshot) => {
    const isTyping = snapshot.val();
    if (isTyping) setStatus('Typing...');
  });

  return () => {
    unsubscribeStatus();
    unsubscribeTyping();
  };
}, [selectedUser?.uid, currentChatId]);


const handleTyping = () => {
  if (!currentChatId || !currentUser?.uid) return;

  const typingRef = ref(db, `typingStatus/${currentChatId}/${currentUser.uid}`);
  set(typingRef, true);

  // Automatically set typing to false after 2 seconds
  setTimeout(() => {
    set(typingRef, false);
  }, 2000);
};

<Typography
  variant="caption"
  color={status === 'Online' || status === 'Typing...' ? 'green' : 'textSecondary'}
>
  {status}
</Typography>